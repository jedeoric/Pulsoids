'PULSOID PURCUSSION PATTERN CONTROLLER AND SID CONTROLLER
'THIS IS THE FIRST INSTANCE OF ANY IRQ, AND WILL PASS CONTROL TO SONIC IRQ HANDLER

'TWO IRQ'S ARE GENERATED
'IRQ1 (TIMEOUT OF T1) SID SOUND   @VARIABLE
'IRQ2 (TIMEOUT OF T2) SMP & MUSIC @3.5KHZ


'IF SID SOUND ON VOLUME, THEN VOL-REFERENCE TABLE TAKEN AS VALUE
'IF SMP, THEN LOWEST VOLUME IN VOL-REFERENCE TABLE USED AS CHANNEL
'IF BOTH SMP/SID ON SAME CHANNEL, SMP TO CHANNEL C
'                                                   DEFAULT
'00-0B RESERVED FOR SONIX PLAY ROUTINE                00
'0C    ACC RESERVATION                                00
'0D    MUSIC DELAY                                    14
'0E
'0F
'10    EVENT REFERENCE (USED TO DETECT NEXT EVENT)    FF
'11    REG-Y RESERVATION DURING DRUM PATTERN ROUTINE  00
'12-13 DRUM PATTERN                                   00
'14    WORK BYTE                                      00
'15    SID PITCH OFFSET                               00
'16
'17    KEYBOARD DELAY			    0A
'18    EFX SAMPLE B0-3 (80) OR B4-7 (0)		    00
'19    KEYBOARD BYTE            		    00

:ZERO_PAGE
[00000000000000000000000000002700FF00000000080A0000000A]


:VECTOR_LO
[L&IRQ_DRIVER,&EFX_IRQ]
:VECTOR_HI
[H&IRQ_DRIVER,&EFX_IRQ]
:DRUM_EVENT	'28 LONG
[00000000010201020102030303030404050406070807070909090909]
:SIDS_EVENT
[28286868282868686828288A8A8A8A6C6C6C6C6C6C6C6C68686868686868]
'B0-1 0/1/2/3 REGISTER
'B2-3 0/4/8/C PITCH CH
'B4-7 0X - FX VALUE
'DIGIDRUM ACTS ON
:POFF_EVENT
[232323232323232323232323230000110011111111010101010101010101]

:PAT_01	'00-0F= SAMPLE      FF=REST
[00FFFFFF00FFFFFF00FFFFFF00FFFFFF]
[00FFFFFF00FFFFFF00FFFFFF00FFFFFF]
[00FFFFFF00FFFFFF00FFFFFF00FFFFFF]
[00FFFFFF00FFFFFF00FFFFFF00FFFFFF]
:PAT_02
[00FFFFFF00FFFFFF00FFFFFF0101FFFF]
[00FFFFFF00FFFFFF00FFFFFF02FF02FF]
[00FFFFFF00FFFFFF00FFFFFF0101FFFF]
[00FFFFFF00FFFFFF00FFFFFF0702FFFF]
:PAT_03
[00FFFFFF00FFFFFF00FFFFFF0101FFFF]
[00FFFFFF00FFFFFF00FFFFFF02FF02FF]
[00FFFFFF00FFFFFF00FFFFFF0101FFFF]
[00FFFFFF00FFFFFF020202FF02FF02FF]
:PAT_04
[06FF08FF02FF08FF06FF08FF02FF06FF]
[08FF06FF02FF08FF06FF08FF02FF08FF]
[06FF08FF02FF08FF06FF08FF02FF06FF]
[08FF06FF02FF08FF06FF08FF02FF08FF]
:PAT_05
[06FF08FF02FF08FF06FF08FF02FF06FF]
[08FF06FF02FF08FF06FF08FF02FF08FF]
[06FF08FF02FF08FF06FF08FF02FF06FF]
[08FF06FF02FF08FF06FF08FF02FF08FF]
:PAT_06
:PAT_07
:PAT_08
:PAT_09
:PAT_10
:DRUM_PATTERNLO
[L:PAT_01,:PAT_02,:PAT_03,:PAT_04,:PAT_05,:PAT_06,:PAT_07,:PAT_08,:PAT_09,:PAT_10]
:DRUM_PATTERNHI
[H:PAT_01,:PAT_02,:PAT_03,:PAT_04,:PAT_05,:PAT_06,:PAT_07,:PAT_08,:PAT_09,:PAT_10]


:SID_CHANNEL	'*3
[08090A]
:PRIMARY_SMP
[0A0A09]
:SECONDARY_SMP
[090808]
:SID_PITCH_CHANNELH	'1/3/5
[000204]

:SAMPLE_LO
'FIRST NINE (0-8) FOR MUSIC
[9FCE26486E6FB22344]
'REST FOR EFX
:SAMPLE_HI
[38393C3F424546474A]
:EFX_NIBBLE
[000000000000000000]


:TITLE_KEYCOL
[EFDFBF7F]
:TITLE_KEYROW
[04000200]
'TITLE:-
'    B0 L-SH  FIRE(START)
'    B1 1     PLAYER 1 CONTROL
'    B2 2     PLAYER 2 CONTROL
'    B3 3     NUMBER OF PLAYERS
:GAME_KEYCOL
[EFDFBFEFFDFBDFDF]
:GAME_KEYROW
[0402000704040501]
' GAME:-
'    B0 L-SH  PLAYER 1 FIRE
'    B1 Z     PLAYER 1 LEFT
'    B2 X     PLAYER 1 RIGHT
'    B3 R-SH  PLAYER 2 FIRE
'    B4 ,     PLAYER 2 LEFT
'    B5 .     PLAYER 2 RIGHT
'    B6 DEL   PAUSE
'    B7 ESC   QUIT!
:BITPOS
[0102040810204080]
' 0 TITLE SONG (LOOPS)
' 1 GAME OVER SONG
' 2 GAME START SONG
' 3 LEVEL COMPLETE SONG
' 4 GAME COMPLETE SONG
' 5 GAME PAUSED SONG?
':SONG_START
'<$00,
':SONG_END
'<$29,


&SEND_SAMPLE
	LDY BFFF	'9-?
	LDA :SAMPLE_LO,Y
	STA &EFX_SMP+1
	LDA :SAMPLE_HI,Y
	STA &EFX_SMP+2
	LDA :EFX_NIBBLE,Y
	STA 18
	RTS

&TEST_MUSIC_DRIVER
	JSR &IRQ_INIT
&TMD_01	LDA BFFA
	LDX #01
	JSR &PLOT_HEX
	LDY BFFA
	LDA :SIDS_EVENT,Y
	AND #03
	ADC #07
	LDX #$10
	JSR &PLOT_HEX
	LDA :SIDS_EVENT,Y
	AND #0C
	LSR
	SEC
	SBC #02
	LDX #$20
	JSR &PLOT_HEX
	LDA :SIDS_EVENT,Y
	LSR
	LSR
	LSR
	LSR
	LDX #$30
	JSR &PLOT_HEX
	JMP &TMD_01



&PLOT_HEX	PHA
	JSR &PLOT_DIGIT
	PLA
	LSR
	LSR
	LSR
	LSR
&PLOT_DIGIT
	AND #0F
	CMP #0A
	BCC 03
	ADC #06
	CLC
	ADC #30
	STA BBD0,X
	DEX
	RTS




'IRQ INIT FOR MUSIC
'X=SONG NUMBER:-
' 0 TITLE SONG (LOOPS)
' 1 GAME OVER SONG
' 2 GAME START SONG
' 3 LEVEL COMPLETE SONG
' 4 GAME COMPLETE SONG
' 5 GAME PAUSED SONG?
&IRQ_INIT	SEI
'         LDA :SONG_START,X
'         STA 	'START EVENT
'         LDA :SONG_END,X
'         STA ????	'END EVENT
'SET IRQ VECTOR TO IRQ_DRIVER
	JSR 0477	'SWITCH OUT ROM
	LDX #1A	'ZERO PAGE USED (MAY CHANGE)
&INIRQ_01	LDA :ZERO_PAGE,X
	STA 00,X
	DEX
	BPL &INIRQ_01
	LDX #00
	LDA :VECTOR_LO,X
	STA FFFE
	LDA :VECTOR_HI,X
	STA FFFF
'SETUP MUSIC STUFF
	LDX #00
	STX BFFA
	STX BFE7
	STX BFE6
	JSR 2A64
	LDX #02
&INIRQ_02	JSR 291B
	DEX
	BPL &INIRQ_02
	LDA #01
	STA 09
	LDA #0A
	STA 08
	LDA #78
	STA 3882
'SETUP IRQ'S
	LDA #7F
	STA 030E
	LDA #E0	'T1 ONLY
	STA 030E
'SET CA2/CB2 HIGH (REGISTER)
	LDA #00
	STA 030F
	LDA #FF
	STA 030C
'SET T1 TIMEOUT TO FFFF
	LDA #FF
	STA 0304
	LDA #FF
	STA 0305
'SET T2 TIMEOUT TO #1F4 (2KHZ)
	LDA #F4
	STA 0308
	LDA #01
	STA 0309
'SET T1 AS FREE RUNNING, T2 AS SINGLE SHOT
	LDA #40
	STA 030B
	CLI
	RTS



''IRQ INIT FOR GAME
'&IRQ_END	SEI	'IF ALL GOOD, THEN FADE MUSIC USING &FILTER AND MAXVOL?
'	LDA #08	'SET TO VOLUME REGISTER
'	STA 030F
'	LDA #DD
'	STA 030C
'	LDA #00
'	STA 030F
'	LDA #FD	'THEN SET PERMANENTLY TO CB2 HI CA2 LO
'	STA 030C
'
'
'	LDA #7F
'	STA 030E
'	LDX #01
'	LDA :VECTOR_LO,X	'EFX ADDRESS
'	STA FFFE
'	LDA :VECTOR_HI,X
'	STA FFFF
'	LDA #$200
'	STA 0304
'	LDA #00
'	STA 0305
'
'	CLI
'	RTS
'
&EFX_IRQ	STA 0C              'PLAYED @5KHZ (30% CPU USED)
'	BIT 18
'&EFX_SMP	LDA BF00
'	BVS 04
'	LSR
'	LSR
'	LSR
'	LSR
'&FILTER	AND #0F
'	STA 030F
'	BEQ
'	INC &EFX_SMP+1
'	BNE 03
'	INC &EFX_SMP+2
'	DEC 17		'ALSO READS KEYBOARD
'	BEQ &EFX_KEYREAD    '256 COUNTER ~ 19HZ KEYREAD
'	LDA 0304
'	LDA 0C
'	RTI	'56+12 ~ 68 CYCLES!
'
'&EFX_KEYREAD
'	STY 11
'	LDA #FF
'	STA 030C
'	LDA #0E
'	STA 030F
'	LDA #FD
'	STA 030F
'	LDA #00
'	STA 19
'	LDY #07
'&EFXKR_01	LDA :GAME_KEYCOL,Y
'	STA 030F
'	LDA :GAME_KEYROW,Y
'	STA 0300
'	LDA 0300
'	AND #08
'	BEQ &EFXKR_01
'	LDA :BITPOS,Y
'	ORA 19
'	STA 19
'&EFXKR_01	DEY
'	BPL &EFXKR_02
'	LDA #FF
'	STA 030C
'	LDA #08
'	STA 030F
'	LDA #FD
'	STA 030C
'	LDA 0304
'	LDA 0C
'	RTI
&SMP_R1	NOP
	NOP
	NOP





&IRQ_DRIVER
	STA 0C
	BIT 030D
	BVC &PROC_MUSICIRQ
&PSID_07	LDA #07             '10
	STA 030F            '4
	LDA #DD             '2
	STA 030C            '4
&PSID_08	LDA 3882              '3
&PSID_VL	EOR #00             '2
&PSID_09	STA 3882              '3
	STA 030F            '4
	LDA #FD             '2
	STA 030C            '4
	LDA #FF             '2
	STA 030C            '4
&PSID_02	LDA 0304            '4
	LDA 0C                '3
	RTI                 '12	'63 !

&PROC_MUSICIRQ	'OPERATES AT 2KHZ
&PMI_01	LDA #08		'PLAY LOW-FREQUENCY SAMPLE (LFS)
	BMI &PMI_04
	STA 030F
	LDA #DD
	STA 030C
&PMI_02	LDA BF00 	'ALWAYS XX00 BOUNDARY
&PMI_14	LSR	'LFS RANGES 1-7<8>9-15 (0=END)
	LSR
	LSR
	LSR
	BEQ &PMI_03
	STA 030F
	LDA #FD
	STA 030C
	INC &PMI_02+1
&PMI_12	LDA #FF
	STA 030C
&PMI_04	DEC 0D	'10TH PASS
	BNE &PMI_05
	LDA #$20
	STA 0D
	JSR 2893  	'PROCESS SONIX MUSIC
	STY 11
	JSR &PROC_SAMPLE
	JSR &CHECK_MUSIC_LOOP
	JSR &DETECT_SID_CHANGE
'	DEC 17
'	BNE &PMI_06
'	JSR &DETECT_KEYBOARD
&PMI_06	JSR &SEND_AY_TABLE
	LDY 11		'RESTORE Y
&PMI_05	LDA #01             'RESET SMP IRQ
	STA 0309
	BIT 030D		'CHECK SID IRQ (BOUND TO NEED PROCESSING AGAIN)
	BVS &PSID_07
	LDA 0C		'RESTORE A
	RTI

&PMI_03	LDA #FF	'END SAMPLE
	STA PMI_01+1
	JMP &PMI_04



'SAMPLES ARE HELD IN MUSIC!
'F-A XY IN A PATTERN ENTRY OF ANY CHANNEL INITIATES A SAMPLE
'WHERE X (VOLSEQ) MUST RANGE 8-F (8 SAMPLES)
'8 4000-40FF DIGIDRUM
'9 4100-41FF KING
'A 4200-42FF HIHAT
'WHERE Y (ORNAMENT) MUST RANGE 0 OR 1
'0 LOW NIBBLE
'1 HIGH NIBBLE
'ETC
&PROC_SAMPLE
	LDY #02   'RELY ON SAMPLES >=8
&PSMP_01	LDA BFE0,Y
	BMI &PSMP_03
	CMP #08
	BCS &PSMP_04
&PSMP_03	DEY
	BPL &PSMP_01
	RTS
&PSMP_04	AND #07	'A CONTAINS SAMPLE (8-F) & Y CONTAINS CHANNEL (0-2)
	ORA #40	'8 SAMPLES AVAILABLE
	STA &PMI_02+2      'SAMPLE HI
	LDA #00
	STA &PMI_02+1      'SAMPLE LO
	TYA
	ADC #07 'ADD WITH CARRY SET
	STA &PMI_01+1
	LDA BFE5,Y
	BNE &PSMP_05
	LDA #29
	STA &PMI_14
	LDA #0F
	STA &PMI_14+1
	LDA #EA
	STA &PMI_14+2
	STA &PMI_14+3
	JMP &PSMP_06
&PSMP_05	LDA #4A
	STA &PMI_14
	STA &PMI_14+1
	STA &PMI_14+2
	STA &PMI_14+3
&PSMP_06	LDA #80
	STA BFE0,Y  'TERMINATE SAMPLE
	STA BFE5,Y  'TERMINATE ORNAMENT
&PSMP_02	RTS

&SEND_AY_TABLE
	LDY #0A
&SAY_01	CPY &PMI_01+1
	BEQ &SAY_02
	STY 030F
	LDA #DD
	STA 030C
	LDA 387B,Y
	STA 030F
	LDA #FD
	STA 030C
	LDA #FF
	STA 030C
&SAY_02	DEY
	BPL &SAY_01
	RTS


&DETECT_SID_CHANGE
	CPY 10
	BEQ &PMI_07 'SAME
	STY 10
          LDA :SIDS_EVENT,Y
	AND #03
	CLC
	ADC #07
	STA &PSID_07+1
	ADC #7B
	STA &PSID_08+1
	STA &PSID_09+1
	LDA :SIDS_EVENT,Y
	AND #0C
	LSR
	ADC #79
	STA &PMI_09+1    'PITCH REGISTER LO
	ADC #01
	STA &PMI_08+1    'PITCH REGISTER HI
	LDA :SIDS_EVENT,Y
	LSR
	LSR
	LSR
	LSR
	STA &PSID_VL+1    'VALUE
	LDA 3882
	AND #%11111000
	STA 3882
	LDA :POFF_EVENT,Y
	STA 15
&PMI_08   LDA 387E
          STA 14
&PMI_09   LDA 387D
          ASL
          ROL 14
          ASL
          ROL 14
          ASL
          ROL 14
          ASL
          ROL 14
	CLC
          ADC 15
          STA 0306
	LDA #00
	ADC 14
          STA 0307
&PMI_07	RTS



&CHECK_MUSIC_LOOP
	LDY BFFA	'EVENT_POINTER
	CPY #1E	'LOOP SONG
	BCC &PMI_10
	STX 14	'RESTART MUSIC
	LDX #00
	STX BFFA
	STX BFE7
	STX BFE6
	JSR 2A64
	LDX #02
&PMI_11	JSR 291B
	DEX
	BPL &PMI_11
	LDA #01
	STA 09
	LDA #0A
	STA 08
	LDY #00
	STY BFFA
	LDX 14
&PMI_10	RTS








&READ_KEYBOARD      '4 KEYS (BUT ALSO READ FIRE ON BOTH IJK JOYSTICKS LATER)
	LDA #0E
	STA 030F
	LDA #FD
	STA 030C
	LDA #$10	'KEY DELAY (EVERY 10 MS)
	STA 17
	LDA #00
	STA 19
	LDY #03
&RKEY_02	LDA :TITLE_KEYCOL,Y
	STA 030F
	LDA :TITLE_KEYROW,Y
	STA 0300
	LDA 0300
	AND #08
	BEQ &RKEY_01
	LDA :BITPOS,Y
	ORA 19
	STA 19
&RKEY_01	DEY
	BPL &RKEY_02
	LDA #00
	STA 030F
	STY 030C
	RTS
new_pointer = old_pointer - offset - 1



'IF CB2 SET TO PULSE MODE, THEN POKING 0300 WITH KEY-ROW WILL PULSE CB2
~END
